{"version":3,"sources":["helpers/Formatter.js","components/DisplayTable/DisplayTable.js","components/HypertensionCalculator/HypertensionCalculator.js","helpers/HyperTensionHelper.js","helpers/KidneyDiseaseHelper.js","components/KidneyDiseaseCalculator/KidneyDiseaseCalculator.js","components/App/App.js","index.js"],"names":["JSONFormatter","input","strToReplace","forEach","n","replaceAll","JSON","parse","err","DisplayTable","props","tableColumns","columns","tableRows","rows","row","this","map","column","TableCell","field","className","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","headerName","TableBody","createRow","React","Component","HypertensionCalculator","processedData","displayData","width","state","value","handleChange","bind","event","inputData","target","valid","_","isNumber","SysBP","DiaBP","isDate","Date","atDate","ValidateData","classification","calculateHyperTensionClassification","AnalyseHypertensionData","setState","FormControl","variant","TextField","label","id","type","onChange","multiline","Card","Typography","color","String","fromCharCode","compare","a","b","KidneyDiseaseCalculator","eGFR","is_float","console","log","sort","last","dropflag","AnalyseKidneyDiseaseData","App","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","useState","setValue","AppBar","position","Tabs","newValue","Tab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fada3970.chunk.js","sourcesContent":["export const JSONFormatter = (input, strToReplace) => {\r\n\ttry {\r\n\t\tstrToReplace.forEach((n) => {\r\n\t\t\tinput = input.replaceAll(n, '\"' + n + '\"')\r\n\t\t});\r\n\r\n\t\t// also format the ''s around the date\r\n\t\tinput = input.replaceAll('\\'', '\"');\r\n\r\n\t\treturn JSON.parse(input)\r\n\t} catch (err) {\r\n\t\t// fail silently\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import React from 'react';\n\n//Table Imports\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass DisplayTable extends React.Component {\n\ttableColumns;\n\ttableRows;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.tableColumns = props.columns;\n\t\tthis.tableRows = props.rows;\n\t}\n\n\tcreateRow(row){\n\t\treturn (\n\t\t\tthis.tableColumns.map((column) => (\n\t\t\t\t<TableCell>{row[column.field]}</TableCell>\n\t\t\t))\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"table-container\">\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table className=\"table\" aria-label=\"simple table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t{ this.tableColumns.map((column) => (\n\t\t\t\t\t\t\t\t\t<TableCell>{column.headerName}</TableCell>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.tableRows.map((row) => (\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t{this.createRow(row)}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default DisplayTable;\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\n// styles\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from '@material-ui/core/Card'\nimport Typography from '@material-ui/core/Typography';\n\n//helpers\nimport {JSONFormatter} from '../../helpers/Formatter';\nimport {ValidateData, AnalyseHypertensionData} from '../../helpers/HyperTensionHelper'\n\n//data display\nimport DisplayTable from '../DisplayTable/DisplayTable'\n\n//test cases\n// [{SysBP:120, DiaBP:110, atDate:'2020/04/21'}]\n// [{SysBP:120, DiaBP:110, atDate:'2020/04/21'}, {SysBP:110, DiaBP:105, atDate:'2019/04/21'}]\n\nclass HypertensionCalculator extends React.Component {\n\n\tinputData;\n\tprocessedData = [];\n\tdisplayData = false;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {value: ''};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tthis.inputData = JSONFormatter(event.target.value, ['SysBP', 'DiaBP', 'atDate']);\n\n\t\tif (ValidateData(this.inputData)) {\n\t\t\tthis.processedData = AnalyseHypertensionData(this.inputData);\n\t\t\tthis.displayData = true;\n\t\t}\n\n\t\tthis.setState({value: event.target.value});\n\t}\n\n\tcolumns = [\n\t\t{ field: 'SysBP', headerName: 'SysBP', width: 70 },\n\t\t{ field: 'DiaBP', headerName: 'DiaBP', width: 70},\n\t\t{ field: 'atDate', headerName: 'Date', width: 70},\n\t\t{ field: 'classification', headerName: 'Classification', width: 70}\n\t];\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"content-container\">\n\t\t\t\t<div className=\"input\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" className=\"input-container\">\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel='Input Data'\n\t\t\t\t\t\t\t\tid='inputArray'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</form>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.inputData === false ?\n\t\t\t\t\t\t\t'Whoops! There\\'s an issue with the data you input. Check it\\'s in the same form as the sample data below' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t}\n\n\t\t\t\t\t<Card className=\"data-info\" variant=\"outlined\">\n\t\t\t\t\t\t<Typography className=\"data-example\" variant=\"h6\" component=\"h1\">\n\t\t\t\t\t\t\tInput data needs to be in the form:\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography className=\"data-example\" color=\"textSecondary\">\n\t\t\t\t\t\t\t<span>[</span>\n\t\t\t\t\t\t\t<span>{String.fromCharCode('123')}SysBP: 120, DiaBP: 90, atDate: '2020/04/05' {String.fromCharCode('125')},</span>\n\t\t\t\t\t\t\t<span>{String.fromCharCode('123')}SysBP: 120, DiaBP: 90, atDate: '2020/08/01' {String.fromCharCode('125')} </span>\n\t\t\t\t\t\t\t<span>]</span>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tthis.displayData !== false ?\n\t\t\t\t\t\t<div className=\"results-container\">\n\t\t\t\t\t\t\t<DisplayTable columns={this.columns} rows={this.processedData}/>\n\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t''\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HypertensionCalculator;\n","import _ from 'lodash';\r\n\r\nexport const ValidateData = (input) => {\r\n\tvar valid = false;\r\n\ttry {\r\n\t\tinput.forEach((n) => {\r\n\t\t\t(_.isNumber(n.SysBP) && _.isNumber(n.DiaBP) && _.isDate(new Date(n.atDate))) ?\r\n\t\t\t\tvalid = true :\r\n\t\t\t\tvalid = false\r\n\t\t});\r\n\t} catch (err) {\r\n\t\t//fail silently\r\n\t}\r\n\treturn valid;\r\n}\r\n\r\nexport const AnalyseHypertensionData = (input) => {\r\n\ttry {\r\n\t\tinput.forEach((n) => {\r\n\t\t\tn.classification = calculateHyperTensionClassification(n.SysBP, n.DiaBP);\r\n\t\t});\r\n\t\treturn input\r\n\t} catch (err) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction calculateHyperTensionClassification(SysBP, DiaBP) {\r\n\tswitch(true){\r\n\t\tcase SysBP >= 180 && DiaBP >= 120 :\r\n\t\t\treturn \"Stage 3\";\r\n\t\tcase 180 > SysBP >= 160 || 110 > DiaBP >= 100 :\r\n\t\t\treturn \"Stage 2\";\r\n\t\tcase 160 > SysBP >= 140 || 100 > DiaBP >= 90 :\r\n\t\t\treturn \"Stage 1\";\r\n\t\tdefault :\r\n\t\t\treturn \"No Hypertension\";\r\n\t}\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport const ValidateData = (input) => {\r\n\tvar valid = false;\r\n\ttry {\r\n\t\tinput.forEach((n) => {\r\n\t\t\t((_.isNumber(n.eGFR) || (n.eGFR.is_float())) && _.isDate(new Date(n.atDate))) ?\r\n\t\t\t\tvalid = true :\r\n\t\t\t\tvalid = false\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.log('failed validate')\r\n\t\t//fail silently\r\n\t}\r\n\treturn valid;\r\n}\r\n\r\n//need to sort dates chronologically\r\nfunction compare( a, b ) {\r\n\tif ( a.atDate < b.atDate ){\r\n\t\treturn -1;\r\n\t}\r\n\tif ( a.atDate > b.atDate ){\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nexport const AnalyseKidneyDiseaseData = (input) => {\r\n\ttry {\r\n\t\tinput.sort(compare);\r\n\r\n\t\tlet last = 0;\r\n\r\n\t\tinput.forEach((n) => {\r\n\t\t\t(last - n.eGFR) > (last * 0.2) ? n.dropflag = '20% Drop' : n.dropflag = '';\r\n\t\t\tn.classification = calculateKidneyDiseaseClassification(n.eGFR);\r\n\r\n\t\t\tlast = n.eGFR;\r\n\t\t});\r\n\r\n\t\treturn input\r\n\t} catch (err) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction calculateKidneyDiseaseClassification(eGFR) {\r\n\tif(eGFR >= 90) {\r\n\t\treturn \"Normal\";\r\n\t} else if (89 >= eGFR && eGFR >= 60) {\r\n\t\treturn \"Mildly Decreased\"\r\n\t} else if (59 >= eGFR && eGFR >= 45 ) {\r\n\t\treturn \"Mild to Moderate\";\r\n\t} else if (44 >= eGFR && eGFR >= 30) {\r\n\t\treturn \"Moderate to Severe\";\r\n\t} else if (29 >= eGFR && eGFR >= 15) {\r\n\t\treturn \"Severeley Decreased\"\r\n\t} else {\r\n\t\treturn \"Kidney Failure\";\r\n\t}\r\n}\r\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\n// styles\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//helpers\nimport {JSONFormatter} from '../../helpers/Formatter';\nimport {ValidateData, AnalyseKidneyDiseaseData} from \"../../helpers/KidneyDiseaseHelper\";\n\n//data display\nimport DisplayTable from '../DisplayTable/DisplayTable'\n\n// test cases\n// [{eGFR: 65, atDate: '2020/04/05' }]\n// [{eGFR: 65, atDate: '2020/04/05' },{eGFR: 71, atDate: '2020/08/01' }]\n// [{eGFR: 86, atDate: '2020/04/05' },{eGFR: 67.0, atDate: '2020/08/01' }, {eGFR: 66, atDate: '2020/09/01' }]\n\n\nclass KidneyDiseaseCalculator extends React.Component {\n\n\tinputData;\n\tprocessedData = [];\n\tdisplayData = false;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {value: ''};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tthis.inputData = JSONFormatter(event.target.value, ['eGFR', 'atDate']);\n\n\t\tif(ValidateData(this.inputData)) {\n\t\t\tthis.processedData = AnalyseKidneyDiseaseData(this.inputData);\n\t\t\tthis.displayData = true;\n\t\t}\n\n\t\tthis.setState({value: event.target.value});\n\t}\n\n\tcolumns = [\n\t\t{field: 'eGFR', headerName: 'eGFR', width: 70},\n\t\t{field: 'atDate', headerName: 'Date', width: 70},\n\t\t{field: 'classification', headerName: 'Classification', width: 70},\n\t\t{field: 'dropflag', headerName: 'Drop Detected', width: 70},\n\t];\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"content-container\">\n\t\t\t\t<div className=\"input\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" className=\"input-container\">\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel='Input Data'\n\t\t\t\t\t\t\t\tid='inputArray'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</form>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.inputData === false ?\n\t\t\t\t\t\t\t'Whoops! There\\'s an issue with the data you input. Check it\\'s in the same form as the sample data below' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t}\n\t\t\t\t\t<Card className=\"data-info\">\n\t\t\t\t\t\t<Typography className=\"data-example\" variant=\"h6\" component=\"h1\">\n\t\t\t\t\t\t\tInput data needs to be in the form:\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography className=\"data-example\" color=\"textSecondary\">\n\t\t\t\t\t\t\t<span>[</span>\n\t\t\t\t\t\t\t<span>{String.fromCharCode('123')}eGFR: 65, atDate: '2020/04/05' {String.fromCharCode('125')},</span>\n\t\t\t\t\t\t\t<span>{String.fromCharCode('123')}eGFR: 71, atDate: '2020/08/01' {String.fromCharCode('125')} </span>\n\t\t\t\t\t\t\t<span>]</span>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tthis.displayData !== false ?\n\t\t\t\t\t\t<div className=\"results-container\">\n\t\t\t\t\t\t\t<DisplayTable columns={this.columns} rows={this.processedData}/>\n\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t''\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default KidneyDiseaseCalculator;\n","import React from 'react';\r\n\r\n//Styles\r\nimport './App.scss';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//components\r\nimport HypertensionCalculator from \"../HypertensionCalculator/HypertensionCalculator\";\r\nimport KidneyDiseaseCalculator from \"../KidneyDiseaseCalculator/KidneyDiseaseCalculator\";\r\n\r\nconst App = () => {\r\n\t// Navigation pane sourced from React docs, https://material-ui.com/components/tabs/\r\n\tfunction TabPanel(props) {\r\n\t\tconst { children, value, index, ...other } = props;\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\trole=\"tabpanel\"\r\n\t\t\t\thidden={value !== index}\r\n\t\t\t\tid={`simple-tabpanel-${index}`}\r\n\t\t\t\taria-labelledby={`simple-tab-${index}`}\r\n\t\t\t\t{...other}\r\n\t\t\t>\r\n\t\t\t\t{value === index && (\r\n\t\t\t\t\t<Box p={2}>\r\n\t\t\t\t\t\t<Typography component={'span'}>{children}</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tfunction a11yProps(index) {\r\n\t\treturn {\r\n\t\t\tid: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}`,\r\n\t\t};\r\n\t}\r\n\r\n\tconst [value, setValue] = React.useState(0);\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='content'>\r\n\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t<Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n\t\t\t\t\t\t<Tab label=\"Hypertension Calculator\" {...a11yProps(0)} />\r\n\t\t\t\t\t\t<Tab label=\"Kidney Disease Calculator\" {...a11yProps(1)} />\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t\t<HypertensionCalculator/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t\t<KidneyDiseaseCalculator/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}